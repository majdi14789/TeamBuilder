/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Gui.admin;

import com.tn.connect.MyConnection;
import com.tn.doa.AdherentDAO;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.text.Document;
import javax.mail.Message;
import javax.mail.Transport;
import javax.mail.PasswordAuthentication;
import java.util.Properties;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import brouillons.Authentification;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.tn.connect.MyConnection;
import com.tn.doa.AdherentDAO;
import com.tn.tableModel.gestionAdherent;
import java.awt.Color;
import java.awt.Graphics;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.UIManager;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author majdi
 */
public class ConsulterinfoAdherent extends javax.swing.JPanel {

    /**
     * Creates new form ConsulterinfoAdherent
     */
    public ConsulterinfoAdherent() {
        initComponents();
        // findCombo();
        update_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        adherentTable = new javax.swing.JTable();
        idadherent_lbl = new javax.swing.JLabel();
        nom_lbl = new javax.swing.JLabel();
        prenomadherent_lbl = new javax.swing.JLabel();
        adresseaderent_lbl = new javax.swing.JLabel();
        mdpAdherent_lbl = new javax.swing.JLabel();
        tel_lbl = new javax.swing.JLabel();
        idadherenttxt = new javax.swing.JTextField();
        nomadherentTxt = new javax.swing.JTextField();
        prenomAdhrentTxt = new javax.swing.JTextField();
        adresseAdherentTxt = new javax.swing.JTextField();
        mdpAdherentTXT = new javax.swing.JTextField();
        telAdherentTXT = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        nbr_recl_lbl = new javax.swing.JLabel();
        nbrReclamationsTxt = new javax.swing.JTextField();
        name_comboBox = new javax.swing.JComboBox();
        txtSearchAdherent = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        EmailText = new javax.swing.JTextArea();
        MailBoutton = new javax.swing.JButton();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        SubjectLabel = new javax.swing.JLabel();
        FromText = new javax.swing.JTextField();
        ToText = new javax.swing.JTextField();
        SubjectText = new javax.swing.JTextField();
        RapportBoutton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        adherentTable.setModel(new gestionAdherent()
        );
        adherentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adherentTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(adherentTable);

        idadherent_lbl.setText("IdAdhérent");

        nom_lbl.setText("Nom");

        prenomadherent_lbl.setText("Prenom");

        adresseaderent_lbl.setText("adresse mail");

        mdpAdherent_lbl.setText("Mot de passe");

        tel_lbl.setText("tel");

        idadherenttxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idadherenttxtActionPerformed(evt);
            }
        });

        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        nbr_recl_lbl.setText("Nombres de réclamations");

        name_comboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                name_comboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        name_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_comboBoxActionPerformed(evt);
            }
        });

        txtSearchAdherent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchAdherentActionPerformed(evt);
            }
        });
        txtSearchAdherent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchAdherentKeyReleased(evt);
            }
        });

        EmailText.setColumns(20);
        EmailText.setRows(5);
        jScrollPane7.setViewportView(EmailText);

        MailBoutton.setText("Mail");
        MailBoutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MailBouttonActionPerformed(evt);
            }
        });

        fromLabel.setText("From");

        toLabel.setText("To");

        SubjectLabel.setText("Subject");

        ToText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToTextActionPerformed(evt);
            }
        });

        RapportBoutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RapportBouttonActionPerformed(evt);
            }
        });

        jLabel4.setText("Veuillez entrez un Nom");

        jLabel5.setText("Selectionnez un Nom");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1124, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(44, 44, 44)
                                    .addComponent(MailBoutton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(idadherent_lbl)
                                            .addComponent(nom_lbl)
                                            .addComponent(prenomadherent_lbl)
                                            .addComponent(adresseaderent_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tel_lbl)))
                                    .addComponent(mdpAdherent_lbl)
                                    .addComponent(nbr_recl_lbl))
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(telAdherentTXT)
                                            .addGap(776, 776, 776))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(idadherenttxt)
                                                            .addComponent(nomadherentTxt)
                                                            .addComponent(prenomAdhrentTxt)
                                                            .addComponent(nbrReclamationsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(adresseAdherentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(159, 159, 159))
                                                .addComponent(mdpAdherentTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(17, 17, 17)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(RapportBoutton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(39, 39, 39)
                                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtSearchAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5)
                                            .addGap(18, 18, 18)
                                            .addComponent(name_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(567, 567, 567))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(71, 71, 71)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(toLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(SubjectLabel)
                                                .addGap(18, 18, 18)
                                                .addComponent(SubjectText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 712, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(200, 200, 200)
                            .addComponent(fromLabel)
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ToText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FromText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 717, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(9, 9, 9)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSearchAdherent, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(name_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGap(16, 16, 16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(idadherent_lbl)
                                .addComponent(idadherenttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nom_lbl)
                                .addComponent(nomadherentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(54, 54, 54)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(prenomadherent_lbl)
                                .addComponent(prenomAdhrentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(16, 16, 16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(adresseaderent_lbl)
                                    .addComponent(adresseAdherentTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(RapportBoutton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mdpAdherent_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mdpAdherentTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(45, 45, 45))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(telAdherentTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tel_lbl))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nbr_recl_lbl)
                        .addComponent(nbrReclamationsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fromLabel)
                        .addComponent(FromText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(23, 23, 23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MailBoutton)
                        .addComponent(ToText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toLabel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SubjectText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SubjectLabel))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void adherentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adherentTableMouseClicked

        try {

            int row =adherentTable.getSelectedRow();
            String Table_Click = (adherentTable.getModel().getValueAt(row, 0).toString());
            String requete ="select * from adherent where id_adherent='"+Table_Click+"'";

            Statement statement = MyConnection.getInstance().createStatement();
            PreparedStatement ps = MyConnection.getInstance().prepareStatement(requete);
            ResultSet resultat = ps.executeQuery();

            if (resultat.next())
            {

                String add1 =resultat.getString("id_adherent");
                idadherenttxt.setText(add1);
                String add2 =resultat.getString("nom");
                nomadherentTxt.setText(add2);
                String add3 =resultat.getString("prenom");
                prenomAdhrentTxt.setText(add3);
                String add4 =resultat.getString("adresse_mail");
                adresseAdherentTxt.setText(add4);
                String add5 =resultat.getString("mdp");
                mdpAdherentTXT.setText(add5);
                String add6 =resultat.getString("telephone");
                telAdherentTXT.setText(add6);
                String add7=resultat.getString("nombre_reclamation");
                nbrReclamationsTxt.setText(add7);

            }

        }

        catch (Exception e )
        {

            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_adherentTableMouseClicked

    private void idadherenttxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idadherenttxtActionPerformed

        idadherenttxt.setEditable(false);
    }//GEN-LAST:event_idadherenttxtActionPerformed
 private void update_table()
    {
        
    try {
        String sql = "select * from adherent";
        Statement statement = MyConnection.getInstance().createStatement();
          PreparedStatement ps = MyConnection.getInstance().prepareStatement(sql);
            ResultSet resultat =ps.executeQuery();
            adherentTable.setModel(DbUtils.resultSetToTableModel(resultat));
            
        
       
    
    }
    
    
    catch(Exception e)
    {
    
     JOptionPane.showMessageDialog(null, e);
    
    
    }
    
    
    }
    
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int p =JOptionPane.showConfirmDialog(null, "etes-vous sur de vouloir supprimer","delete",JOptionPane.YES_NO_OPTION);
        AdherentDAO adherentDAO=new AdherentDAO();
        if (p ==0)
        {
            int id= Integer.parseInt(idadherenttxt.getText());
            adherentDAO.deleteAdherent(id);

            String requete = "delete from adherent where id_adherent= ?";

            update_table();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed
public void update(Graphics g) {
        super.update(g);}
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        try
        {
            int id =Integer.parseInt(idadherenttxt.getText());
            String nom =nomadherentTxt.getText();
            String prenom =prenomAdhrentTxt.getText();
            String adresseMail =adresseAdherentTxt.getText();
            String mdp =mdpAdherentTXT.getText();
            int tel =Integer.parseInt(telAdherentTXT.getText());
            int breReclamation =Integer.parseInt(nbrReclamationsTxt.getText());

            AdherentDAO adherentDAO=new AdherentDAO();
            adherentDAO.updateAdherent(id, nom, prenom, adresseMail, mdp, tel, breReclamation);

        }

        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);

        }

        update_table();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void name_comboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_name_comboBoxPopupMenuWillBecomeInvisible
        String tmp = (String)name_comboBox.getSelectedItem();
        String sql = "select * from adherent where nom = ?";

        try
        {

            Statement statement = MyConnection.getInstance().createStatement();
            PreparedStatement ps = MyConnection.getInstance().prepareStatement(sql);

            ps.setString(1, tmp);
            ResultSet resultat =ps.executeQuery();

            if (resultat.next())
            {
                String add1 = resultat.getString("id_adherent");
                idadherenttxt.setText(add1);
                String add2 =resultat.getString("nom");
                nomadherentTxt.setText(add2);
                String add3 =resultat.getString("prenom");
                prenomAdhrentTxt.setText(add3);
                String add4 =resultat.getString("adresse_mail");
                adresseAdherentTxt.setText(add4);
                String add5 =resultat.getString("mdp");
                mdpAdherentTXT.setText(add5);
                String add6 =resultat.getString("telephone");
                telAdherentTXT.setText(add6);
                String add7=resultat.getString("nombre_reclamation");
                nbrReclamationsTxt.setText(add7);

            }

        }

        catch (Exception e)
        {

            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_name_comboBoxPopupMenuWillBecomeInvisible

    private void name_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_comboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_comboBoxActionPerformed

    private void txtSearchAdherentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchAdherentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchAdherentActionPerformed

    private void txtSearchAdherentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchAdherentKeyReleased

        try{

            String requete=" select * from adherent where nom=?";
            Statement statement = MyConnection.getInstance().createStatement();
            PreparedStatement ps = MyConnection.getInstance().prepareStatement(requete);
            ps.setString(1, txtSearchAdherent.getText());

            ResultSet resultat = ps.executeQuery();

            if(resultat.next())
            {

                String add1 = resultat.getString("id_adherent");
                idadherenttxt.setText(add1);
                String add2 =resultat.getString("nom");
                nomadherentTxt.setText(add2);
                String add3 =resultat.getString("prenom");
                prenomAdhrentTxt.setText(add3);
                String add4 =resultat.getString("adresse_mail");
                adresseAdherentTxt.setText(add4);
                String add5 =resultat.getString("mdp");
                mdpAdherentTXT.setText(add5);
                String add6 =resultat.getString("telephone");
                telAdherentTXT.setText(add6);
                String add7=resultat.getString("nombre_reclamation");
                nbrReclamationsTxt.setText(add7);

            }

        }
        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_txtSearchAdherentKeyReleased

    private void MailBouttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MailBouttonActionPerformed

        String From =FromText.getText();
        String To = ToText.getText();
        String Subject=SubjectText.getText();
        String TextEmail = EmailText.getText();

        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.gom");
        props.put("mail.smtp.socketFactory.port", 587);
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "587");

        // mazel mech kemel video 89 :))
        Session session=Session.getDefaultInstance(props,
            new javax.mail.Authenticator() {
                protected  PasswordAuthentication getPasswordAuthentication()
                {

                    return new PasswordAuthentication("xyz@gmail.com", "password");

                }
            }
        );

        try {

            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("xyz@gmail.com"));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse("abc@gmail.com"));
            message.setSubject(" salut c'est moi sindoud");
            message.setText("salut , j'espere que tu vas bien ");
            Transport.send(message);
            JOptionPane.showMessageDialog(null, "Message envoyé");

        }
        catch(Exception e)
        {

            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_MailBouttonActionPerformed

    private void ToTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ToTextActionPerformed

    private void RapportBouttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RapportBouttonActionPerformed
        
            // pagesize.A4.rotate() pour voir le rapport dans IDE
//            Document document = new Document(PageSize.A4.rotate()) {};
//        try {
//            PdfWriter writer= PdfWriter.getInstance((com.itextpdf.text.Document) document, new FileOutputStream("rapport.pdf"));
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(ConsulterinfoAdherent.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (DocumentException ex) {
//            Logger.getLogger(ConsulterinfoAdherent.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//            if ((new File("rapport.pdf")).exists()) {
//
//                Process p;
//                try {
//                    p = Runtime
//                            .getRuntime()
//                            .exec("rundll32 url.dll,FileProtocolHandler rapport.pdf");
//                } catch (IOException ex) {
//                    Logger.getLogger(ConsulterinfoAdherent.class.getName()).log(Level.SEVERE, null, ex);
//                }
//                p.waitFor();
//
//            } else {
//
//                System.out.println("File is not exists");
//
//            }
//
//            document.open();
//            // Date
//            document.add(new Paragraph(new Date().toString()));
//
//            // ajoute un tableau dans le rapport
//
//            PdfPTable table = new PdfPTable(4);
//            table.addCell("Id Adhérent");
//            table.addCell("Nom de l'adhérent");
//            table.addCell("Prénom de l'adhérent");
//            table.addCell("Numéro de l'adhérent");
//            document.add(table);
//            // le titre du tableau
//            PdfPCell cell = new PdfPCell(new Paragraph("Informations Adhérents"));
//            cell.setColspan(10);
//            table.addCell(cell);
//
//            // ajouter l'image dans le fichier pdf
//            Image image;
//        try {
//            image = Image.getInstance("statistiques.png");
//        } catch (BadElementException ex) {
//            Logger.getLogger(ConsulterinfoAdherent.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(ConsulterinfoAdherent.class.getName()).log(Level.SEVERE, null, ex);
//        }
//            document.add(new Paragraph("statistiques.png"));
//            document.add(image);
//
//            // document.add(new Paragraph("Salut sindoud", FontFactory.getFont(FontFactory.TIMES_BOLD,18,Font.BOLD, BaseColor.BLUE)));
//
//            //document.add(new Paragraph (new Date().toString()));
//
//            document.close();
//            //com.itextpdf.text.Image image1= com.itextpdf.text.Image.getInstance("statistiques.png");
//            // image1.scaleAbsolute(400,300);
//            //document.add(image1);
//            //PdfContentByte cb= writer.getDirectContent();
//            JOptionPane.showMessageDialog(null, "rapport enregistré");
//
    }//GEN-LAST:event_RapportBouttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea EmailText;
    private javax.swing.JTextField FromText;
    private javax.swing.JButton MailBoutton;
    private javax.swing.JButton RapportBoutton;
    private javax.swing.JLabel SubjectLabel;
    private javax.swing.JTextField SubjectText;
    private javax.swing.JTextField ToText;
    private javax.swing.JTable adherentTable;
    private javax.swing.JTextField adresseAdherentTxt;
    private javax.swing.JLabel adresseaderent_lbl;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel idadherent_lbl;
    private static javax.swing.JTextField idadherenttxt;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField mdpAdherentTXT;
    private javax.swing.JLabel mdpAdherent_lbl;
    private javax.swing.JComboBox name_comboBox;
    private javax.swing.JTextField nbrReclamationsTxt;
    private javax.swing.JLabel nbr_recl_lbl;
    private javax.swing.JLabel nom_lbl;
    private javax.swing.JTextField nomadherentTxt;
    private javax.swing.JTextField prenomAdhrentTxt;
    private javax.swing.JLabel prenomadherent_lbl;
    private javax.swing.JTextField telAdherentTXT;
    private javax.swing.JLabel tel_lbl;
    private javax.swing.JLabel toLabel;
    private javax.swing.JTextField txtSearchAdherent;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
